package zerjioang.im.legalhack.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table CHATS__INICIADOS.
 */
public class CHATS_INICIADOSDao extends AbstractDao<CHATS_INICIADOS, Long> {

    public static final String TABLENAME = "CHATS__INICIADOS";

    public CHATS_INICIADOSDao(DaoConfig config) {
        super(config);
    }

    ;


    public CHATS_INICIADOSDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "'CHATS__INICIADOS' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'RUTA' TEXT NOT NULL ," + // 1: RUTA
                "'TITULO' TEXT NOT NULL ," + // 2: TITULO
                "'ULTIMOSMS' TEXT," + // 3: ULTIMOSMS
                "'ULTIMAHORA' TEXT," + // 4: ULTIMAHORA
                "'USUARIODESTINO' TEXT);"); // 5: USUARIODESTINO
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'CHATS__INICIADOS'";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, CHATS_INICIADOS entity) {
        stmt.clearBindings();

        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindString(2, entity.getRUTA());
        stmt.bindString(3, entity.getTITULO());

        String ULTIMOSMS = entity.getULTIMOSMS();
        if (ULTIMOSMS != null) {
            stmt.bindString(4, ULTIMOSMS);
        }

        String ULTIMAHORA = entity.getULTIMAHORA();
        if (ULTIMAHORA != null) {
            stmt.bindString(5, ULTIMAHORA);
        }

        String USUARIODESTINO = entity.getUSUARIODESTINO();
        if (USUARIODESTINO != null) {
            stmt.bindString(6, USUARIODESTINO);
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }

    /**
     * @inheritdoc
     */
    @Override
    public CHATS_INICIADOS readEntity(Cursor cursor, int offset) {
        CHATS_INICIADOS entity = new CHATS_INICIADOS( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
                cursor.getString(offset + 1), // RUTA
                cursor.getString(offset + 2), // TITULO
                cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // ULTIMOSMS
                cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // ULTIMAHORA
                cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // USUARIODESTINO
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, CHATS_INICIADOS entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setRUTA(cursor.getString(offset + 1));
        entity.setTITULO(cursor.getString(offset + 2));
        entity.setULTIMOSMS(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setULTIMAHORA(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setUSUARIODESTINO(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected Long updateKeyAfterInsert(CHATS_INICIADOS entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }

    /**
     * @inheritdoc
     */
    @Override
    public Long getKey(CHATS_INICIADOS entity) {
        if (entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    /**
     * Properties of entity CHATS_INICIADOS.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property RUTA = new Property(1, String.class, "RUTA", false, "RUTA");
        public final static Property TITULO = new Property(2, String.class, "TITULO", false, "TITULO");
        public final static Property ULTIMOSMS = new Property(3, String.class, "ULTIMOSMS", false, "ULTIMOSMS");
        public final static Property ULTIMAHORA = new Property(4, String.class, "ULTIMAHORA", false, "ULTIMAHORA");
        public final static Property USUARIODESTINO = new Property(5, String.class, "USUARIODESTINO", false, "USUARIODESTINO");
    }

}
